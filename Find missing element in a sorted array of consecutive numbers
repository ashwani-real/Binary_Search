// https://www.geeksforgeeks.org/find-missing-element-in-a-sorted-array-of-consecutive-numbers/

time comp=O(n) method 1

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define V vector    
#define pb push_back     
#define mp make_pair      
#define p pair           
#define f first            
#define s second           
#define Q queue               
#define S stack               
#define test ll t;cin>>t;while(t--)
#define md 1e9+7
#define all(x) x.begin(),x.end()
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define endl "\n"
ll i,j,k,n,m,a,b,c,d,x,y,z,q1,q2,cnt=0,cnt1=0,flag=0,flag1=0,sum=0,sum1=0,ans=0,ans1=0,ans2=0,mn=INT_MAX,mx=INT_MIN;
void ashwani(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

int main(){
	//ashwani();
	fast;
    cin>>n;
    ll a1[n+1];
    for(i=0;i<n;i++)
    cin>>a1[i];
    mn=a1[0];mx=a1[n-1]; j=1;
    for(i=mn+1;i<mx;i++){
        if(a1[j]!=i){
            cout<<i<<endl;
            break;
        }
        j++;
    }
    if(i==mx) cout<<-1<<endl;
	return 0;
}

         complexity   log(n) method 2
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define V vector    
#define pb push_back     
#define mp make_pair      
#define p pair           
#define f first            
#define s second           
#define Q queue               
#define S stack               
#define test ll t;cin>>t;while(t--)
#define md 1e9+7
#define all(x) x.begin(),x.end()
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define endl "\n"
ll i,j,k,n,m,a,b,c,d,x,y,z,q1,q2,cnt=0,cnt1=0,flag=0,flag1=0,sum=0,sum1=0,ans=0,ans1=0,ans2=0,mn=INT_MAX,mx=INT_MIN;
void ashwani(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

int main(){
	//ashwani();
	fast;
    cin>>n;
    ll a1[n+1];
    for(i=0;i<n;i++)
    cin>>a1[i];
    ll l=0,r=n-1,mid,ans=1;
    while(l<=r){
        mid=l+(r-l)/2;
        if(a1[mid]==a1[0]+mid){
            l=mid+1;
        }
        else 
        r=mid-1;
        ll d=a1[mid]-a1[mid-1];
        if(d>1){
        ans=a1[mid]-1; break;
       }
    }
    cout<<ans<<endl;
	return 0;
}
 
 
